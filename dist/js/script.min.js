"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var i={},t=Object.prototype,u=t.hasOwnProperty,l=Object.defineProperty||function(t,e,n){t[e]=n.value},e="function"==typeof Symbol?Symbol:{},r=e.iterator||"@@iterator",n=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(t){a=function(t,e,n){return t[e]=n}}function c(t,e,n,r){var o,a,i,c,e=e&&e.prototype instanceof p?e:p,e=Object.create(e.prototype),r=new b(r||[]);return l(e,"_invoke",{value:(o=t,a=n,i=r,c="suspendedStart",function(t,e){if("executing"===c)throw new Error("Generator is already running");if("completed"===c){if("throw"===t)throw e;return E()}for(i.method=t,i.arg=e;;){var n=i.delegate;if(n){n=function t(e,n){var r=n.method,o=e.iterator[r];if(void 0===o)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=void 0,t(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),s;r=d(o,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,s;o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,s):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,s)}(n,i);if(n){if(n===s)continue;return n}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if("suspendedStart"===c)throw c="completed",i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c="executing";n=d(o,a,i);if("normal"===n.type){if(c=i.done?"completed":"suspendedYield",n.arg===s)continue;return{value:n.arg,done:i.done}}"throw"===n.type&&(c="completed",i.method="throw",i.arg=n.arg)}})}),e}function d(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var s={};function p(){}function h(){}function f(){}var e={},y=(a(e,r,function(){return this}),Object.getPrototypeOf),y=y&&y(y(I([]))),m=(y&&y!==t&&u.call(y,r)&&(e=y),f.prototype=p.prototype=Object.create(e));function v(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function g(i,c){var e;l(this,"_invoke",{value:function(n,r){function t(){return new c(function(t,e){!function e(t,n,r,o){var a,t=d(i[t],i,n);if("throw"!==t.type)return(n=(a=t.arg).value)&&"object"==_typeof(n)&&u.call(n,"__await")?c.resolve(n.__await).then(function(t){e("next",t,r,o)},function(t){e("throw",t,r,o)}):c.resolve(n).then(function(t){a.value=t,r(a)},function(t){return e("throw",t,r,o)});o(t.arg)}(n,r,t,e)})}return e=e?e.then(t,t):t()}})}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function S(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function b(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function I(e){if(e){var n,t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return n=-1,(t=function t(){for(;++n<e.length;)if(u.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:E}}function E(){return{value:void 0,done:!0}}return l(m,"constructor",{value:h.prototype=f,configurable:!0}),l(f,"constructor",{value:h,configurable:!0}),h.displayName=a(f,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,f):(t.__proto__=f,a(t,o,"GeneratorFunction")),t.prototype=Object.create(m),t},i.awrap=function(t){return{__await:t}},v(g.prototype),a(g.prototype,n,function(){return this}),i.AsyncIterator=g,i.async=function(t,e,n,r,o){void 0===o&&(o=Promise);var a=new g(c(t,e,n,r),o);return i.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},v(m),a(m,o,"Generator"),a(m,r,function(){return this}),a(m,"toString",function(){return"[object Generator]"}),i.keys=function(t){var e,n=Object(t),r=[];for(e in n)r.push(e);return r.reverse(),function t(){for(;r.length;){var e=r.pop();if(e in n)return t.value=e,t.done=!1,t}return t.done=!0,t}},i.values=I,b.prototype={constructor:b,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!t)for(var e in this)"t"===e.charAt(0)&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var r=this;function t(t,e){return a.type="throw",a.arg=n,r.next=t,e&&(r.method="next",r.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=u.call(o,"catchLoc"),c=u.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;0<=n;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&u.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,s):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),s},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),S(n),s}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var n,r,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(n=o.completion).type&&(r=n.arg,S(o)),r}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:I(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),s}},i}function _createForOfIteratorHelper(t,e){var n,r,o,a,i="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(i)return r=!(n=!0),{s:function(){i=i.call(t)},n:function(){var t=i.next();return n=t.done,t},e:function(t){r=!0,o=t},f:function(){try{n||null==i.return||i.return()}finally{if(r)throw o}}};if(Array.isArray(t)||(i=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length)return i&&(t=i),a=0,{s:e=function(){},n:function(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function(t){throw t},f:e};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){var n;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(n="Object"===(n=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:n)||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function _iterableToArrayLimit(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,a,i,c=[],u=!0,l=!1;try{if(a=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(c.push(r.value),c.length!==e);u=!0);}catch(t){l=!0,o=t}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw o}}return c}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function asyncGeneratorStep(t,e,n,r,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(e,n){var r=c.apply(t,i);function o(t){asyncGeneratorStep(r,e,n,o,a,"next",t)}function a(t){asyncGeneratorStep(r,e,n,o,a,"throw",t)}o(void 0)})}}var apiKey="GHF2ZQQLEQ3ZQM18",apiUrl="https://www.alphavantage.co/query",nominatorInput=document.getElementById("ticker-one"),denominatorInput=document.getElementById("ticker-two"),searchResults=document.getElementById("searchResults");function fetchSearchResults(t,e){fetch("https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=".concat(t,"&apikey=").concat(apiKey)).then(function(t){return t.json()}).then(function(t){displaySearchResults(t.bestMatches,e)}).catch(function(t){console.error("Error:",t)})}function displaySearchResults(r,o){searchResults.innerHTML="";for(var a=0;a<r.length;a++)!function(){var t=r[a],e=t["1. symbol"],t=t["2. name"],n=document.createElement("li");n.textContent="".concat(e," - ").concat(t),n.addEventListener("click",function(){o.value=e,searchResults.innerHTML=""}),searchResults.appendChild(n)}()}function autocompleteHandler(t){var e=t.target.value.trim(),t=t.target;0<e.length?fetchSearchResults(e,t):searchResults.innerHTML=""}function fetchStockData(t){return _fetchStockData.apply(this,arguments)}function _fetchStockData(){return(_fetchStockData=_asyncToGenerator(_regeneratorRuntime().mark(function t(e){var n,r;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return n=new URLSearchParams({function:"GLOBAL_QUOTE",symbol:e,apikey:apiKey}),t.next=3,fetch("".concat(apiUrl,"?").concat(n));case 3:return n=t.sent,t.next=6,n.json();case 6:return void 0===(r=t.sent)["Global Quote"]&&Swal.fire({icon:"error",title:"Oops...",text:"Failed to fetch stock data!",footer:"you might want to refresh your page"}),t.abrupt("return",r["Global Quote"]);case 9:case"end":return t.stop()}},t)}))).apply(this,arguments)}nominatorInput.addEventListener("input",autocompleteHandler),denominatorInput.addEventListener("input",autocompleteHandler);var sectorSelect=document.getElementById("sector"),longInput=document.getElementById("long"),shortInput=document.getElementById("short"),dateInput=document.getElementById("entryDate"),spreadInput=document.getElementById("spread"),spreadEntry=document.getElementById("spreadEntry"),percentSpread=document.getElementById("percentSpread"),watchlistRows=document.getElementById("watchlistRows"),addPriceBtn=document.getElementById("PriceBtn"),watchlistBtn=document.getElementById("addToWatchlist"),showTable=document.querySelector("table"),updateBtn=document.getElementById("updateBtn");function addPrice(){return _addPrice.apply(this,arguments)}function _addPrice(){return(_addPrice=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e,n;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:e=nominatorInput.value,n=denominatorInput.value,""!==e&&fetchStockData(e).then(function(t){t=parseFloat(t["05. price"]).toFixed(2);longInput.value=t,calculateSpread()}),""!==n&&fetchStockData(n).then(function(t){t=parseFloat(t["05. price"]).toFixed(2);shortInput.value=t,calculateSpread()});case 4:case"end":return t.stop()}},t)}))).apply(this,arguments)}function calculateSpread(){var t=document.getElementById("long"),e=document.getElementById("short"),t=parseFloat(t.value),e=parseFloat(e.value);isNaN(t)||isNaN(e)||(t=t/e,document.getElementById("spread").value=t.toFixed(2))}function addToWatchlist(){var t,e,n=sector.value,r=nominatorInput.value.toUpperCase(),o=denominatorInput.value.toUpperCase(),a=longInput.value,i=shortInput.value,c=dateInput.value,u=spreadInput.value,l=spreadInput.value,l=(u-l)/l*100;r&&o&&a&&i&&u&&c&&(t={sector:n,nominator:r,denominator:o,longPrice:a,shortPrice:i,spread:u,date:c,percentSpread:l.toFixed(2)},(e=(e=localStorage.getItem("watchlistData"))?JSON.parse(e):[]).push(t),localStorage.setItem("watchlistData",JSON.stringify(e)),t=document.createElement("tr"),e=watchlistRows.getElementsByTagName("tr").length,t.innerHTML="\n    <td>".concat(e+1,"</td>\n    <td>").concat(n,'</td>\n    <td id="longNominator">').concat(r,'</td>\n    <td id="shortDenominator">').concat(o,'</td>\n    <td id="longPrice">').concat(a,'</td>\n    <td id="shortPrice">').concat(i,'</td>\n    <td id="spreadEntry">').concat(u,'</td>\n    <td id="date">').concat(c,'</td>\n    <td id="longUpdate">').concat(a,'</td>\n    <td id="shortUpdate">').concat(i,'</td>\n    <td id="currentSpread">').concat(u,'</td>\n    <td id="percentSpread">').concat(l,'%</td>\n    <td><button onclick="removeRow(this)">x</button></td>\n    '),watchlistRows.appendChild(t),sectorSelect.value="",nominatorInput.value="",denominatorInput.value="",longInput.value="",shortInput.value="",spreadInput.value="",dateInput.value="")}function updateAllRows(){for(var l=watchlistRows.querySelectorAll("tr"),d=[],t=0;t<l.length;t++)!function(o){var a=l[o],t=a.querySelector("#longNominator"),e=a.querySelector("#shortDenominator"),n=a.querySelector("#longUpdate"),r=a.querySelector("#shortUpdate"),i=a.querySelector("#currentSpread"),t=t.textContent.toUpperCase(),e=e.textContent.toUpperCase(),t=fetchStockData(t).then(function(t){t=parseFloat(t["05. price"]);return n.textContent=t.toFixed(2),updateLocalStorageValue(o,"longUpdate",t.toFixed(2)),t}),e=fetchStockData(e).then(function(t){t=parseFloat(t["05. price"]);return r.textContent=t.toFixed(2),updateLocalStorageValue(o,"shortUpdate",t.toFixed(2)),t}),c=parseFloat(a.querySelector("#spreadEntry").textContent),u=Promise.all([t,e]).then(function(t){var e,n,t=_slicedToArray(t,2),r=t[0],t=t[1];isNaN(r)||isNaN(t)||(i.textContent=(r=r/t).toFixed(2),t=(parseFloat(i.textContent)-c)/c*100,e=Math.fround(t).toFixed(2),i.textContent=r.toFixed(2),n=a.querySelector("#percentSpread"),a.querySelector("#percentSpread").textContent="".concat(e,"%"),n.style.color=0<t?"lime":"red",updateLocalStorageValue(o,"currentSpread",r.toFixed(2)),updateLocalStorageValue(o,"percentSpread","".concat(e,"%")))});d.push(t,e,u)}(t);Promise.all(d).then(function(){Swal.fire({icon:"success",title:"OK !",text:"Data update success"})})}function updateLocalStorageValue(t,e,n){var r=localStorage.getItem("watchlistData");r&&(r=JSON.parse(r),0<=t)&&t<r.length&&(r[t][e]=n,localStorage.setItem("watchlistData",JSON.stringify(r)))}function removeRow(t){for(var t=t.closest("tr"),e=t.parentNode,n=(t.remove(),e.getElementsByTagName("tr")),r=1;r<n.length;r++)n[r].cells[0].textContent=r.toString();e=parseInt(t.cells[0].textContent),t=localStorage.getItem("watchlistData");t&&((t=JSON.parse(t)).splice(e-1,1),localStorage.setItem("watchlistData",JSON.stringify(t))),removeButton.addEventListener("click",function(){removeRow(this)})}addPriceBtn.addEventListener("click",addPrice),watchlistBtn.addEventListener("click",addToWatchlist),updateBtn.addEventListener("click",updateAllRows),nominatorInput.addEventListener("input1",addPrice),denominatorInput.addEventListener("input2",addPrice),window.addEventListener("load",function(){if(t=localStorage.getItem("watchlistData")){var t,e,n=_createForOfIteratorHelper(JSON.parse(t));try{for(n.s();!(e=n.n()).done;){var r=e.value,o=document.createElement("tr"),a=watchlistRows.getElementsByTagName("tr").length;o.innerHTML="\n\t\t  <td>".concat(a+1,"</td>\n\t\t  <td>").concat(r.sector,'</td>\n\t\t  <td id="longNominator">').concat(r.nominator,'</td>\n\t\t  <td id="shortDenominator">').concat(r.denominator,'</td>\n\t\t  <td id="longPrice">').concat(r.longPrice,'</td>\n\t\t  <td id="shortPrice">').concat(r.shortPrice,'</td>\n\t\t  <td id="spreadEntry">').concat(r.spread,'</td>\n\t\t  <td id="date">').concat(r.date,'</td>\n\t\t  <td id="longUpdate">').concat(r.longUpdate,'</td>\n\t\t  <td id="shortUpdate">').concat(r.shortUpdate,'</td>\n\t\t  <td id="currentSpread">').concat(r.currentSpread,'</td>\n\t\t  <td id="percentSpread">').concat(r.percentSpread,'</td>\n\t\t  <td><button onclick="removeRow(this)">x</button></td>\n\t\t'),watchlistRows.appendChild(o)}}catch(t){n.e(t)}finally{n.f()}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
